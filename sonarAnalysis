@Library('jenkins-shared-lib@main')_

pipeline {

    agent any

stages {
    
    stage ('Checkout'){

        steps{
              echo 'Checking out code from Git'

              git url: 'https://github.com/duraipandigit/pipeline_test.git',branch: 'main',credentialsId: 'GitHub_Token'
        }

    }

    stage('Unit test'){
        
        steps{

            echo ' Running Unit Test'

        }
    }

    stage ('Code Coverage'){

        steps{

            CodeCoverage()
        }
    }
   stage('SonarQube Analysis') {
            steps {
                // Use withSonarQubeEnv to set up SonarQube environment variables
                withSonarQubeEnv('http://10.192.190.152:31506') {  // Replace with your server name from Jenkins config
                    // For Maven projects
                    sh 'mvn clean verify sonar:sonar -Dsonar.projectKey=testproject -Dsonar.projectName=testproject'
                }
            }
}
    
    stage('Build'){

        steps{

            echo 'Running build steps'
        }
    }

    stage("Docker Image Creation"){

        steps{

            echo ' Creating docker image'

        }
    

    }

}
    post {

        success{

            echo 'pipeline completed successfully!'
        }

        aborted{

            echo 'Pipeline was aborted'
        }

        unstable{

            echo ' Pipeline is unstable'
        }

        failure {

            echo 'pipeline failed'
        }

        always{

            echo 'This will run always , for code cleanup email notification'
        }
    }
    
}
